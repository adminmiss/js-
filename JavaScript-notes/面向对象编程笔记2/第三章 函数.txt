函数：实际上就是代码的分组形式，就是一段代码块，函数也是一种数据类型（Function）。

为什么说函数也是一种数据类型？
――答：1）包含的是代码
        2）它们是可执行的（或者说是可调用的）

注意：函数通常都有返回值，如果没有显式的返回值，那么默认就是undefined   ，一个函数只能有一个返回值，如果需要同时返回多个值时，可以考虑将其放进一个数组里，以数组的形式返回。

isNaN():确定某个输入值是否是一个可以参与算术运算的数字。

isNaN(NaN)  //true 也就是说NaN虽然是数字，但不能参与算术运算。

isNaN(123)  //false


例子：		var a=12;
		function(){
			alert(a);
			var a=1;
			alert(a);
		}
		//undefined
		//1
注意：函数域优先于全局域，所以局部变量会覆盖所有与它同名的全局变量，尽管在alert（）第一次调用时，a还未正式定义（undefined），但该变量本身已经存在于本地空间了

例子：
var a=function(){
	function aa(){
	      var setup="done";
		}
	function b(){
	      alert("Work hard！");
	        }
	      aa();
	      return b;
	}();
详解：1）aa()、b()是私有函数，
      2）后面的小括号――自调函数
      3)函数的功能：当函数第一次被调用的时候，它会调用aa(),并返回函数变量b的引用（b后面没有小括号）,因此该结果仅仅是一个函数的引用，并不会产生函数的调用。
      4）执行语句 var a=...开头，因而该自调函数所返回的值会重新赋值给a

      5）当函数第一次被载入的时候。什么都不会出来
      6)之后再次调用a()时  alert()的结果是"Work hard!"


闭包：








































