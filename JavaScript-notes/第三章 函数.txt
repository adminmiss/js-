1、函数：一种代码的分组形式。（要使用函数，则必须去调用它）

2、如果设置了参数，而少写了某个参数，js会把它默认为undefined，如过多写了会它忽略

3、注意：arguments实际上不是一个数组，而是一个类似数组的对象。

4、isNaN() 函数：判断输入值是否是一个非数字，数值输出false,非	         数字输出true
   
  parseInt():将输入值（字符串）转化为整数类型输出
    
  parseFloat():y与上面基本相同

  eval()里面的内容将被当作js代码来执行

例子：		var a=12;
		function(){
			alert(a);
			var a=1;
			alert(a);
		}
		//undefined
		//1
注意：函数域优先于全局域，所以局部变量会覆盖所有与它同名的全局变量，尽管在alert（）第一次调用时，a还未正式定义（undefined），但该变量本身已经存在于本地空间了

5、函数也是一种数据类型，只不过这种类型有两个特征：a:包含的是代码 b：是可执行的（可调用的）




笔记：

js运行过程：
1）预编译过程：将所有的变量（全局函数（形参也会创建出来））创建出来，赋值为undefined，但是其他所有的赋值语句等等都不会执行。

2）再调用执行过程

递归函数：自己会调用自己，实现无限循环

一个函数如果有返回值那么它的值就是这个值，如果没有那么它就是undefined  有return的是有返回值的函数，没有return那么它就是undefined

构造函数：

类的属性（成员变量）

类的方法（成员方法）

回调函数：将函数当参数传入的函数就是回调函数；

变量存在栈中，对象存在堆中，栈的效率比堆大的多。（因为对象的占的内存比较大）


js执行过程：

a)预编译过程(第一过程)：

1）对所有带var 的变量进行创建，并赋值为undefined，但是不会执行任何赋值语句。
2）对所有带function关键字的函数进行创建，但不会执行

b)执行过程（第二过程）：逐条执行各行语句