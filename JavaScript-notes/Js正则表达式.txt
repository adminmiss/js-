1、字符串操作

(1)search 字符串查找；――返回字符串的位置

substring（起点，终点）//字符串截取，不包括终点
substring（一个参数） // 从开始位置到结尾


(2)charAt(2)      //返回字符串的某一个字符

(3)split()       //字符串的切分 成一个数组

(4)match()       //把所有匹配的提取出来

(4)replace("需要替换的字符串","替换的字符串")    
――常用语敏感词过滤

例如：var re=/北京|百度|淘宝/g
      oTxt2.value=oTxt1.value.replace(re,"***");


2、什么是正则表达式I
――规则、模式

3、//  i      表示忽略大小写  例如/a/i  查找a和A
       \d     表示数字    例如/\d/
       g      表示全部搜索（全局匹配）
       +      （量词）个数：如干个  
       |       表示或  例如 北京|淘宝|百度
       [abc]pc   [] 表示任意取一个   例如 apc bpc cpc 
       [a-z]      表示所有的英文字母 
       [0-9]      表示所有的数字 与\d 相同
       [^a-z]     除了英文字母，其他都匹配
       .          代表任意字符
       .+         代表任意个字符
       ^          行首（字符串开头）
       $          行尾（字符串结尾）

实例：过滤惠HTML标签  
 
   var re=/<[^<>]+>/g;
   oTxt2.value=oTxt1.value.replace(re,"");

常用转义字符

    \d  数字               [0-9]
    \w  英文、数字、下划线  [a-z0-9_]
    \s  空白字符  
    \D                      [^0-9]
    \W                      [^a-z0-9_]
    \S                      非空白字符  
     .                      代表任意字符
     
     
常用量词（个数）
   {n}        正好出现n次        例如座机号 [1-9]\d{7}
   {n,m}      最少n次，最多m次   例如QQ号:[1-9]\d{4,10}  
   {n,}       最少n 次，做多不限  
    ―――例如 “+”相当于{1,} 
    ？        相当于{0,1}   最少0次，最多1次  也就是可有可无
    *         任意次{0,}


实例：邮箱校验  var re=/^\w+@[a-z0-9]+\.[a-z]+$/i   

\.      就代表字符串  .
\\d     就代表字符串  \d
