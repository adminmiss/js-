栈内存：内存小，运算速度快
堆内存：内存大，运算速度慢

JS中对象是在栈中储存首地址――>首地址（指向）――>堆内存
 
也就是说对象先在栈中储存首地址，然后此首地址指向堆内存，在堆内存上储存属性等等。

例如：
Var p2=p1;
将p1栈中保存的堆的地址赋值给了p2，所以说,p2也指向了p1指向的堆内存的地址
两个对象指向了同一块堆内存，所以改变一个对象的属性，会影响到另一个对象

如果另 p2=null;  此时p1不会受到影响   P2=null; 表示释放p2所占的栈空间，但p1的空间仍保留，p1仍然指向相应的堆空间，所以删除p2不会影响到p1对象。



变量：直接储存在栈内存上（因为变量占的内存小） 

例如：如果是变量 var  a=b;
 将变量b的内存赋值给a ――>如果改变变量a，此时变量b不变

this的深入理解：
――函数都是用对象调用起来的，例如：go()  其实是window.go()
在js中，如何判断一个函数是以面向过程调用还是以面向对象形式来调用？
――所有函数都是面向对象调用，普通函数的调用是由window对象调用的


例子：function text(){
	this.i=100;
	}
        i=10;
        text();
        alert(this.i);  //100

详解：调用text()  相当于window.text() 对象就指向了window，也就相当于window.i=100; 最后就弹出100;


例子：var i=100;
      function text(){
	this.i=200;
	}
	text();
	alert(i);//200  这个只是变量的作用域问题

事件冒泡：

IE
      window.event.cancelBubble=true;
其他（w3c）
      event.stopPropagetion();

默认行为：

IE
     window.event.returnValue="false";

其他（w3c）
     event.preventDefault(); 
    